[
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01.html",
	"title": "Chapter 1 - Getting Started",
	"tags": [],
	"description": "",
	"content": "Fortinet Azure SDWAN Networking Workshop Chapter 1 - Provisioning the Azure environment (40min) Provision your Azure Environment, enter your Email address and click Provision Please enter your email address Warning\nAfter submitting, this page will return with a blank email address box and no other indications.\nProvisioning can take several minutes.\n*** PLEASE DO NOT SUBMIT MULTIPLE TIMES ***\nWhen provisioning is complete, one of the following will happen.\nYou will receive an email with Azure environment credentials. Use those credentials for this environment, even if you have your own. You will receive and email indicating that there are no environments available to utilize. In this case please try again at a later date. You will receive an email indicating that the supplied email address is from an unsupported domain. No email received due to an unexpected error. You can try again or notify the Azure CSE team. Tasks\nSetup Azure Cloud Shell Run Terraform Verify Terraform "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/",
	"title": "Fortinet FortiGate SDWAN on Azure",
	"tags": [],
	"description": "",
	"content": "Fortinet FortiGate Workshop on Azure Welcome! In this workshop you will learn how to deploy Fortinet\u0026rsquo;s FortiGate NGFW on Azure in several different use cases\nAbout TEC Recipes TEC Recipes provide the learner with the opportunity to put into practice newly developed skills in an easy to launch environment that can be used for customer engagements. At a minimum a TEC Recipe will include the following:\nA use case description\nAn integrated lab and demo environment\nInformational call-outs for key points to discuss or highlight to a customer Questions that could be asked while giving the TEC Recipe as a demo Points of value that relate the business value to the technical feature A reference architecture(s)\nOptional components may be included for certain use cases\nThe TEC Recipe will not be a completely, self-contained learning experience for a single product. A TEC Recipe will cover features and often multiple products where they relate to the use case of interest.\nDeployments will be automated for those tasks that are not salient to the learning or demonstration activity in the use case. For example, for a TEC Recipe focused on Indicators of Compromise, the system may deploy a FortiGate and FortiAnalyzer with configurations for these systems. However, the leaner will have to configure the Event Handlers for IOC setup.\nAzure SD-WAN TEC Recipe Introduction: As enterprises adopt the cloud as the new core for application hosting, remote sites require secure, reliable connectivity with an optimal user experience to access those cloud and SaaS applications. In fact, cloud access is SD-WAN\u0026rsquo;s primary use case for IaaS and SaaS-hosted services. Fortinet\u0026rsquo;s Cloud On-Ramp capabilities using SD-WAN are differentiated in the following ways:\nIntegrated Security and SD-WAN policy configuration and workflows Unique ability to provide scale up performance for higher bandwidth into cloud environments Decentralized orchestration for better survivability and easier deployment of SD-WAN overlays Single OS for consistent policy and overlay deployment on all software-defined networks (SDNs) The purpose of this TEC Recipe is to familiarize the learner with routing, data-plane, and architectural concepts specific to the Azure Cloud environment. Other TEC Recipes are available to cover SD-WAN feature deployment.\nTEC Recipe Objectives Deploy the SD-WAN architecture using Terraform Configure Azure components Load Balancer VNET Peering Route Server vWAN and vWAN Hub Understand the different available architecture options Warning\nThe examples and sample code provided in this workshop are intended to be consumed as instructional content. These will help you understand how various Fortinet and Azure services can be architected to build a solution while demonstrating best practices along the way. These examples are not intended for use in production environments without full understanding of how they operate.\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02.html",
	"title": "Chapter 2 - Hub / Branch VPN",
	"tags": [],
	"description": "",
	"content": "Fortinet Azure SDWAN Networking Workshop Chapter 2 - Hub and Branch VPN Connectivity (20min) Tasks\nAdd FortiGates to Hub Load Balancer Backend Pool Create load balancing rules for VPN Traffic Hub and Branch VPN Connectivity Verification "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02/2_task1.html",
	"title": "Task 1 - Add FortiGates to Hub LB",
	"tags": [],
	"description": "",
	"content": "Task 1 - Add FortiGates to Hub Load Balancer Backend Pool Select the Hub External Load Balancer sdwan-USERXX-workshop-hub1-elb1 Click Backend pools Select \u0026ldquo;hub1-ext-fgt\u0026rdquo; Click \u0026ldquo;+Add\u0026rdquo; Select sdwan-USERXX-workshop-hub1-fgt1 and sdwan-USERXX-workshop-hub1-fgt2 port1 interfaces 10.10.0.4 10.10.0.5 Click \u0026ldquo;Add\u0026rdquo; Click \u0026ldquo;Save\u0026rdquo; "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01/2_task1.html",
	"title": "Task 1 - Setup Azure CloudShell",
	"tags": [],
	"description": "",
	"content": "Task 1 - Setup your AzureCloud Shell Login to Azure Cloud Portal https://portal.azure.com/ with the provided login/password\nClick the link \u0026ldquo;Skip for now (14 days until this is required)\u0026rdquo; do not click the \u0026ldquo;Next\u0026rdquo; button\nClick the \u0026ldquo;Next\u0026rdquo; button\nClick on Cloud Shell icon on the Top Right side of the portal\nSelect Bash\nClick on Show advanced settings\nSelect\nUse existing Resource Group - it should auto populate with USERXX-workshop-sdwan (USERXX is your Username) Use existing Storage account - it should auto populate with USERXX########## (########## is a random string) Use existing File Share - type cloudshellshare Click \u0026ldquo;Attach Storage\u0026rdquo;\nYou should now have access to Azure Cloud Shell console\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/2_task1.html",
	"title": "Task 1 - VNET Peering",
	"tags": [],
	"description": "",
	"content": "Task 1 - Create Hub and Spoke VNET peering Create a VNET peering between the Spoke11 VNET and the Hub VNET\nSelect Spoke VNET, USERXX-workshop-sdwan-spoke11\nClick on Peerings\nAdd peering to Hub VNET, USERXX-workshop-sdwan-hub1\nThis virtual network\nPeering link name - spoke11-to-hub Traffic to remote virtual network - \u0026ldquo;Allow (default)\u0026rdquo; Traffic forwarded from remote virtual network - \u0026ldquo;Allow (default)\u0026rdquo; Virtual network gateway or Route Server - \u0026ldquo;Use the remote virtual network\u0026rsquo;s gateway or Route\u0026rdquo; Server Remote virtual network\nPeering link name - hub-to-spoke11 Virtual network deployment model - \u0026ldquo;Resource manager\u0026rdquo; Subscription - \u0026ldquo;Internal-Training\u0026rdquo; Virtual network - \u0026ldquo;USERXX-workshop-sdwan-hub1\u0026rdquo; Traffic to remote virtual network - \u0026ldquo;Allow (default)\u0026rdquo; Traffic forwarded from remote virtual network - \u0026ldquo;Allow (default)\u0026rdquo; Virtual network gateway or Route Server - \u0026ldquo;Use this virtual network\u0026rsquo;s gateway or Route Server\u0026rdquo; Repeat for Spoke12 VNET, USERXX-workshop-sdwan-spoke12\nSelect Spoke VNET, USERXX-workshop-sdwan-spoke11\nClick on Peerings\nAdd peering to Hub VNET, USERXX-workshop-sdwan-hub1\nThis virtual network\nPeering link name - spoke12-to-hub Remote virtual network\nPeering link name - hub-to-spoke12 You will see errors until all the correct selections are made.\nVerify that the Branch FortiGates have learned the Spoke11 VNET and Spoke12 VNET CIDRs. Run the Command get router info routing-table all on all the Branch FortiGates.\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/3_task2.html",
	"title": "Task 2 - Azure Route Server",
	"tags": [],
	"description": "",
	"content": "Task 2 - Check Azure Route Server Configuration and Learned Routes Select the Azure Route Server USERXX-workshop-sdwan-RouteServer contained within your Resource Group.\nClick on Peers on the left side of the menu, verify the connection to the Hub FortiGates\nList the routes learned by Azure Route Server, run the commands below from your Azure Cloud Shell\nThe variable ${USER} in the commands reads your username from the environment az network routeserver peering list-learned-routes -g ${USER}-workshop-sdwan --routeserver ${USER}-workshop-sdwan-RouteServer --name sdwan-fgt1 az network routeserver peering list-learned-routes -g ${USER}-workshop-sdwan --routeserver ${USER}-workshop-sdwan-RouteServer --name sdwan-fgt2 { \u0026#34;RouteServiceRole_IN_0\u0026#34;: [ { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.4\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;10.10.255.1/32\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 }, { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.4\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;172.18.0.0/16\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 }, { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.4\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;172.17.0.0/16\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 }, { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.4\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;172.16.0.0/16\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 } ], \u0026#34;RouteServiceRole_IN_1\u0026#34;: [ { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.5\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;10.10.255.1/32\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 }, { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.5\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;172.18.0.0/16\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 }, { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.5\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;172.17.0.0/16\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 }, { \u0026#34;asPath\u0026#34;: \u0026#34;64622\u0026#34;, \u0026#34;localAddress\u0026#34;: \u0026#34;10.10.2.5\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;172.16.0.0/16\u0026#34;, \u0026#34;nextHop\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;origin\u0026#34;: \u0026#34;EBgp\u0026#34;, \u0026#34;sourcePeer\u0026#34;: \u0026#34;10.10.1.4\u0026#34;, \u0026#34;weight\u0026#34;: 32768 } ] } The passive FortiGate will produce empty output\n{ \u0026#34;RouteServiceRole_IN_0\u0026#34;: [], \u0026#34;RouteServiceRole_IN_1\u0026#34;: [], \u0026#34;value\u0026#34;: null } "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02/3_task2.html",
	"title": "Task 2 - LB Rules for VPN Traffic",
	"tags": [],
	"description": "",
	"content": "Task 2 - Create load balancing rules for IPSEC VPN Traffic Select the Hub External Load Balancer sdwan-USERXX-workshop-hub1-elb1\nClick on Load balancing rules\nClick \u0026ldquo;+ Add\u0026rdquo;\nCreate Load balancing rules for UDP 500 and UDP 4500 - one rule for each\nName - udp-500 Name - udp-4500 Option value value Name udp-500 udp-4500 IP Version IPv4 IPv4 Frontend IP address hub-pip1 hub-pip1 Backend pool hub1-ext-fgt hub1-ext-fgt Protocol UDP UDP Port 500 4500 Backend port 500 4500 Health probe hub1-elb1-probe hub1-elb1-probe Session persistence None None Floating IP Disabled Disabled Outbound SNAT Use implicit Use implicit "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01/3_task2.html",
	"title": "Task 2 - Run Terraform",
	"tags": [],
	"description": "",
	"content": "Task 2 - Run the Terraform Deployment Perform the following step in your Cloudshell console to create your environment.\nClone the Github repo Change directory to the technical-recipe-azure-sdwan/terraform folder Run terraform init Run terraform plan for your username Run terraform apply for your username Copy and paste these commands into your Cloud Shell console. The terraform variable username will be populated with the value of the environment variable USER\ngit clone https://github.com/FortinetSecDevOps/technical-recipe-azure-sdwan cd ./technical-recipe-azure-sdwan/terraform/ terraform init terraform plan -var=\u0026#34;username=${USER}\u0026#34; terraform apply -var=\u0026#34;username=${USER}\u0026#34; -auto-approve The current state of the Architecture is shown below.\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04.html",
	"title": "Chapter 4 - Hub / Spoke Peering",
	"tags": [],
	"description": "",
	"content": "Fortinet Azure SDWAN Networking Workshop Chapter 4 - Branch, Hub, and Spoke VNET Connectivity (40min) Tasks\nCreate Hub and Spoke VNET peering Check Azure Route Server Configuration and Learned Routes Create a Dynamic SDN object [troubleshooting required] Allow and Generate Traffic between Branches and Spokes via Hub "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02/4_task3.html",
	"title": "Task 3 - Hub and Spoke VPN Verification",
	"tags": [],
	"description": "",
	"content": "Task 3 - Hub and Branch VPN Connectivity Verification Verify that the FortiGates are responding to Azure Load Balancer Health Checks\nSelect the Hub External Load Balancer sdwan-USERXX-workshop-hub1-elb1 Click Insights Close the Metrics panel Green, Red, and/or Yellow lines indicate FortiGate reachability.\nClicking the \u0026ldquo;Refresh\u0026rdquo; button a few times, if yellow lines are present. Eventually (30 seconds) red and green lines will replace the yellow.\nThe diagram shows the load balancing rules along with the Inbound NAT Rules configured on the load balancer.\nVerify that the VPN connections from the Branches to the Hub are UP, check Branches 1, 2 and 3.\nLogin to each Branch FortiGate\nClick \u0026ldquo;Dashboard\u0026rdquo;\nClick \u0026ldquo;Network\u0026rdquo;\nClick \u0026ldquo;Expand to full screen\u0026rdquo; in the IPsec widget\nVerify that BGP peering with the Hub is UP and that the Branch FortiGates learned the Hub and other Branches\u0026rsquo; CIDRs. Check all Branch FortiGates.\nOpen a FortiGate CLI session\nRun the Command get router info routing-table all\nThe current state of the Architecture is shown below.\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/4_task3.html",
	"title": "Task 3 - SDN Object",
	"tags": [],
	"description": "",
	"content": "Task 3 - Create a Dynamic SDN object [troubleshooting required] Can the Hub FortiGate Azure SDN Connector read the Azure environment? Troubleshoot and Make the required changes to allow the FortiGate to retrieve the SDN filters.\nHub FortiGate debug the Azure SDN Connector\ndiagnose debug application azd -1 diagnose debug enable Hints:\nFGT Branch3 is able to retrieve the filters, why that is not the case for the FortiGates behind Load Balancers? FGT Branch3 is standalone, all other FortiGates are in A-P HA, how does that affect traffic to retrieve SDN information? Hub External Load Balancer needs a management nic backend pool and a TCP rule, any port suffices. This rule is about letting TCP traffic out. The External Load Balancer will let the response traffic back in because the traffic originated internally. Create a backend pool on the Hub load balancer using the Hub FortiGate Management Interfaces\n10.10.4.4 10.10.4.5 Create a TCP Load Balancer Rule, any port will do, e.g. 13000. This rule will allow TCP response traffic back through the load balancer, when to a TCP request originated from a device in a backend pool associated to the load balancer.\nCreate a dynamic address object on the Hub FortiGate, named Spoke_VNETs that resolves to the Spoke VNETs VMs\nUse the object in an existing Policy named Branch to Cloud to restrict traffic coming from the Branches to only VMs in the Spoke VNETs.\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01/4_task3.html",
	"title": "Task 3 - Terraform Verifications",
	"tags": [],
	"description": "",
	"content": "Task 3 - Terraform Verification Using the Terraform output, verify that you have Web and SSH access to the FortiGates.\nTerraform output can be redisplayed at any point as long as you are in the ./technical-recipe-azure-sdwan/terraform/ directory, by using the command terraform output\ncd cd ./technical-recipe-azure-sdwan/terraform/ terraform output Connect to the Branch FortiGates and check the VPN IPSec status.\nConnect to the Hub FortiGates and check the WAN IP.\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01/5_chapter1quiz.html",
	"title": "Chapter 1 Quiz",
	"tags": [],
	"description": "",
	"content": "Chapter 1 - QUIZ FortiGates in the Hub do not have public IPs, how are they accessible via the Web UI?\nWhy are the VPN connections down?\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02/5_chapter2quiz.html",
	"title": "Chapter 2 Quiz",
	"tags": [],
	"description": "",
	"content": "Chapter 2 - QUIZ Why is one FortiGate depicted as unhealthy by the Azure Hub External Load Balancer?\nWhy is NAT used to access the FortiGates, but for IPSEC VPN traffic Load balancing rules are used?\nDo FortiGates in the Branches learn Spoke11 and Spoke12 CIDRs?\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02/6_chapter2quiz.html",
	"title": "Chapter 2 Quiz Answers",
	"tags": [],
	"description": "",
	"content": "Chapter 2 - QUIZ Answers Why is one FortiGate depicted as unhealthy by the Azure Hub External Load Balancer?\nThe passive FortiGate does not respond to the load balancer health probes. Only after a failover event will the newly active FortiGate start responding to health probes. Why is NAT used to access the FortiGates, but for IPSEC VPN traffic Load balancing rules are used?\nNAT allows each individual FortiGate to be accessed via the Public IP of the load balancer. A load balancer rule would only allow access to the Active FortiGate. Do FortiGates in the Branches learn Spoke11 and Spoke12 CIDRs?\nSpoke11 and Spoke12 CIDRs are not yet known to the Hub FortiGate so the Branches will not learn them yet. "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/5_task4.html",
	"title": "Task 4 - Traffic generation",
	"tags": [],
	"description": "",
	"content": "Task 4 - Traffic generation Generate Traffic from Branch1 Primary FortiGate:\nConnect to the Branch1 Primary FortiGate Configure ping-options to initiate traffic from FortiGate\u0026rsquo;s private nic (port2). execute ping-options source 172.16.2.5 - source IP depends on which Branch1 FortiGate is primary br1fgt1 or br1fgt2 execute ping-options repeat-count 100 Initiate a ping to Spoke11 and Spoke12 Linux VMs (10.11.1.4 and 10.12.1.4) execute ping 10.11.1.4 execute ping 10.12.1.4 Generate Traffic from Branch1 Linux VM:\nEnable serial console access on Branch1 Linux VM\nClick on the VM sdwan-USERXX-workshop-br1lnx1\nGo to Boot diagnostics -\u0026gt; Settings -\u0026gt; Select Enable with managed storage account (recommended)\nClick Save\nGo to the VM Serial Console Initiate a ping to Spoke11 and Spoke12 Linux VMs\nping 10.11.1.4 ping 10.12.1.4 Does it work?\nAt the end of this step you should have the following architecture\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01/6_chapter1quiz.html",
	"title": "Chapter 1 Quiz Answers",
	"tags": [],
	"description": "",
	"content": "Chapter 1 - QUIZ FortiGates in the Hub do not have public IPs, how are they accessible via the Web UI?\nWhy are the VPN connections down?\nQuiz 1 Answers FortiGates in the Hub do not have public IPs, how are they accessible via the Web UI?\nThe Public IPs on the external load balancers for the Hub, Branch1 and Branch2 FortiGates have inbound NAT rules setup. Why are the VPN connections down?\nThe external load balancer for the Hub FortiGates needs load balancing rules for UDP 500 and UDP 4500. "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/6_chapter4quiz.html",
	"title": "Chapter 4 Quiz",
	"tags": [],
	"description": "",
	"content": "Chapter 4 - QUIZ What was missing to allow the FortiGates to retrieve SDN connector filters?\nWhy is the FortiGate only able to retrieve the SDN connector filters in its own Resource Group?\nWhy is the Branch FortiGate able to reach the remote Spoke VNETs VMs (10.11.1.4 and 10.12.1.4) but the Linux VM behind the Branch1 FortiGate cannot?\nFortiGates at Branch1 and Branch2 site are both behind Azure Load Balancers (behind NAT). Will Branch1 to Branch2 traffic successfully establish an ADVPN shortcut?\n"
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/01/7_chapter1discussion.html",
	"title": "Chapter 1 Discussion",
	"tags": [],
	"description": "",
	"content": "Discussion Points During a Demo - Chapter 1 Fortinet provides a large library of infrastructure as code (IaC) templates to deploy baseline and iterate POC and production environments in public cloud. IaC support includes Terraform, Ansible, and cloud-specific services such as Azure ARM, AWS Cloudformation, and Google Deployment (jinja) templates. Terraform Providers are available for FortiGate and FortiManager to insert and iterate running configuration.\nFor more information, review the following:\nFortiOS 7.2 Admin Guide\nTerraform Providers\nKey questions during your demo - Chapter 1 When giving this TEC Recipe as as demo, the following questions will provide a basis for next steps and future meetings:\nHas your organization standardized on an IaC tool-set for infrastructure provisioning and iteration? How are the responsibilities for infrastructure assigned? Does cloud network fall under a DevOps, Cloud Networking, or Application Delivery team, as examples? What is view on how IaC can improve workflows? Is workflow automation in cloud and cross-organizational collaboration important within your cloud business? "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/02/7_ch2discussion.html",
	"title": "Chapter 2 Discussion",
	"tags": [],
	"description": "",
	"content": "Discussion Points During a Demo - Chapter 2 When discussing load balanced traffic with the customer, point out key details about the Azure Load Balancers such as the following:\nAzure LB uses 5-tuple hash for traffic distribution IPSec in an Active/Active configuration is not supported as session stability cannot be guaranteed to IkE rekeys, and deterministic IP termination. TCP/UDP headers are rewritten to the backend pool. HTTP/s headers are not changed. Legacy applications or those requiring long-lived sessions could see performance issues due to TTL limitations on the LB. When connecting IPSec traffic from remote inter-regional sites, the customer\u0026rsquo;s architecture could benefit from dedicated FortiGates to support IPSec. This is a benefit where large traffic loads are supported for deep packet inspection and where there is a lot of E/W traffic. Dedicated FortiGates for IPSec allow the opportunity to scale VPN traffic using IPSec Aggregate without impacting performance of traffic inspection. Details on IPSec Aggregate can be found here.\nDon\u0026rsquo;t forget that the CLI is still a great place to get targeted information with a single command. For example, viewing the FortiGate known routes with the CLI command get router info routing-table all\nKey questions during your demo - Chapter 2 When giving this TEC Recipe as as demo, the following questions will provide a basis for next steps and future meetings:\nHow sensitive are your applications to session timeout? Do they require large TTL values for long-lived sessions? What type of VPN scaling (tunnel count and bandwidth) are required for your deployment? How much east/west traffic versus north/south traffic will be supported? What types of inspection will be required between various VNets? Is advanced BGP configuration required? (FortiGate-to-FortiGate can support advanced BGP metrics unlike Azure\u0026rsquo;s services) "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/7_chapter4quiz.html",
	"title": "Chapter 4 Quiz Answers",
	"tags": [],
	"description": "",
	"content": "Chapter 4 - QUIZ Answers What was missing to allow the FortiGates to retrieve SDN connector filters?\nThe FortiGate\u0026rsquo;s management interfaces need access to the Azure APIs via a public IP address. This required adding a backend pool for the FortiGate management interfaces and a TCP load balancing rule to let the API response to an internal request back through the external load balancer. Why is the FortiGate only able to retrieve the SDN connector filters in its own Resource Group?\nThe FortiGate VM Azure Identity was given the \u0026ldquo;Reader\u0026rdquo; role with the scope of the Resource Group. Why is the Branch FortiGate able to reach the remote Spoke VNETs VMs (10.11.1.4 and 10.12.1.4) but the Linux VM behind the Branch1 FortiGate cannot?\nThe Linux VM does not know how to get to the FortiGate because no default route was defined for the route table which controls the subnet the Linux VM is in. FortiGates at Branch1 and Branch2 site are both behind Azure Load Balancers (behind NAT). Will Branch1 to Branch2 traffic successfully establish an ADVPN shortcut?\nYes "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/04/8_ch4discussion.html",
	"title": "Chapter 2 Discussion",
	"tags": [],
	"description": "",
	"content": "Discussion Points During a Demo - Chapter 4 Azure Virtual Network (VNET) Peering provides the ability to connect multiple VNETs together and direct traffic flow based on existence of a gateway in a connected peer or with a user defined route (UDR) in a route table.\nUtilizing an Azure Route Server (ARS) and setting the FortiGates as a BGP peers enables the FortiGates to be updated with newly available routes or the removal of routes as VNETs are peered or when a peering relationship is removed.\nFrom a FortiGate Policy perspective the ability to be dynamically aware of a changing environment is provided by the Azure SDN Connector. The SDN Connector is continually polling the environment and logging the changes, FortiGate dynamic address objects and Automation Stitches can take full advantage of the SDN connector to update policy and effect internal and external changes.\nAn Azure Route Table provides a way to specifically direct traffic, when used in conjunction with an ARS or FortiGate static routes protected workload traffic can be fully managed.\nSeveral settings in Azure determine traffic flow review the following for Azure Routing\nAzure Route Server Azure Route Tables Key questions during your demo - Chapter 4 Do you currently use, planning to use or just learning about VNET peering? Are you aware of the capabilities that the Azure SDN Connector provides? Are you using dynamic address objects or Automation Stitches? "
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://fortinetsecdevops.github.io/technical-recipe-azure-sdwan/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]